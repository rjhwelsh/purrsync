#+TITLE: Purrsync - A wrapper for rsync
#+AUTHOR: Roger J. H. Welsh
#+EMAIL: rjhwelsh@gmail.com
* About
	=Purrsync= is an rsync wrapper for syncing files based on package collections.
* Some Examples
** Simple invocation
 The simplest invocation is:
 Synchronizing from a *MAINFILE* (file list) everything from *SRC* to *DEST*.
 #+BEGIN_EXAMPLE sh
 purrsync -m $MAINFILE $SRC $DEST
 #+END_EXAMPLE

 Here is a realistic example of the above.
 #+BEGIN_SRC sh
 mkdir -v /tmp/etc
 cd /etc
 find . > /tmp/mainfile
 purrsync -m /tmp/mainfile /etc /tmp/etc
 #+END_SRC
** Ignore list

An ignore file list can be used.
#+BEGIN_SRC sh
cd /etc
find . > /tmp/mainfile
find -iname \*.key > /tmp/ignorefile
purrsync -m /tmp/mainfile -i /tmp/ignorefile /etc /tmp/etc
#+END_SRC

** Piping commands

Instead of creating files, =purrsync= can run the commands for you.
#+BEGIN_SRC sh
cd /etc
purrsync --main-exec "find" --ignore-exec "find -iname \*.key" /etc /tmp/etc
#+END_SRC

** Package sorting

The main goal of this script was to sort backup configurations for packages on a
per-package basis. On Gentoo this can be achieved with the following.

#+BEGIN_SRC sh
purrsync -p -o -x "find /etc" -e "qlist {}" -L "qfile /etc | awk '{ print \$1 }'" / /tmp/etc
#+END_SRC

- The =-p= flag is required for package sorting.
- The =-o= flag is for creating a special directory for orphaned files (without packages).
- The =-x= flag is synonymous with =--main-exec=.
- The =-e= flag runs ="qlist {}"= for every package, where ={}= is replaced with
  the package name.
- The =-L= flag runs ="qfile /etc | awk '{print \$1 }'"= on =/bin/sh= to get a
  list of the relevant packages. These names are fed into =qlist {}=.

Only the /set intersection/ between =-x= and =-e= are synchronized into the
package destinations.

** Arguments for =rsync=
Arguments can be passed to =rsync=.
#+BEGIN_SRC sh
purrsync -m FILELIST --rsync-args="-v" / /tmp/root
#+END_SRC

The path to the =rsync= binary can be specified,
#+BEGIN_SRC sh
purrsync -m FILELIST --rsync-bin="/usr/bin/rsync" / /tmp/root
#+END_SRC
by default =purrsync= uses the =which= command to find the location of =rsync=.

** Backup directory

A backup directory can be given to =purrsync= relative to the =main=, =pkg= and
=orphan= directories in the destination.
#+BEGIN_SRC sh
purrsync --backup-dir="backup-dir" -m FILELIST / /tmp/root
#+END_SRC

This can be used to create incremental backup snapshots.
#+BEGIN_SRC sh
purrsync --rsync-args="-u" -b "$(date +%F-%I%M%p-%Z)" -m FILELIST / /tmp/root
#+END_SRC
The =rsync= =-u= option specifies to only update the destination if files are
newer on the source.

* Destination Directory Structure

The destination directory is structured as follows.

 * *destination*
	 - *main*
		 - root
		 - /backup-dir/
	 - *orphan*
		 - root
		 - /backup-dir/
	 - *pkg*
		 - package_name
			 - root
  		 - /backup-dir/

The destination passed to =rsync= always ends in root.

* Conclusions

I hope this has been a helpful guide.

If you have any suggestions, comments or would like to submit a PR, please be in
touch.

Have a nice day! :)
